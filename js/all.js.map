{"version":3,"sources":["app.js","lightbox.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["// Counter Logic\r\nconst cartNumber = document.querySelector('.cart-number'),\r\n    decreaseCartAmountIcon = document.querySelector('.remove-icon'),\r\n    increaseCartAmountIcon = document.querySelector('.plus-icon');\r\nlet productAmountValue = document.querySelector('.product_amount');\r\n\r\nconst changeCounter = (type) => {\r\n    if (type === 'increment' && +productAmountValue.innerText >= 0) {\r\n        +productAmountValue.innerText++;\r\n    } else if (type === 'decrement' && +productAmountValue.innerText >= 1) {\r\n        +productAmountValue.innerText--;\r\n    }\r\n};\r\n\r\nconst updateCartItemsCount = () => {\r\n    cartNumber.innerText = document.querySelectorAll('.cart_product').length;\r\n};\r\n\r\ndecreaseCartAmountIcon.addEventListener('click', () =>\r\n    changeCounter('decrement')\r\n);\r\nincreaseCartAmountIcon.addEventListener('click', () =>\r\n    changeCounter('increment')\r\n);\r\n\r\n// Show Cart Box Details\r\nconst cartIcon = document.querySelector('.cart-icon');\r\nconst cartDetailsBox = document.querySelector('.cart_details');\r\n\r\ncartIcon.addEventListener('click', (event) => {\r\n    cartDetailsBox.style.display = 'block';\r\n    event.stopPropagation();\r\n});\r\n\r\ndocument.addEventListener('click', (event) => {\r\n    if (\r\n        !event.target.classList.contains('cart_details') ||\r\n        !event.target.classList.contains('cart-icon')\r\n    ) {\r\n        cartDetailsBox.style.display = 'none';\r\n    }\r\n});\r\n\r\n// Toggle Menu Logic\r\nconst navbarToggler = document.querySelector('.navbar-toggler');\r\nconst navbarTogglerIcon = document.querySelector('.navbar-toggler-icon');\r\nconst menu = document.querySelector('.navbar-collapse');\r\nconst overlay = document.querySelector('.overlay');\r\n\r\nnavbarToggler.addEventListener('click', () => {\r\n    if (menu.classList.contains('active')) {\r\n        menu.classList.toggle('active');\r\n        overlay.classList.toggle('active');\r\n        // The Close Icon Convert to Menu Icon\r\n        navbarTogglerIcon.style.removeProperty('background-image');\r\n    } else {\r\n        menu.classList.toggle('active');\r\n        overlay.classList.toggle('active');\r\n        navbarTogglerIcon.style.backgroundImage =\r\n            'url(\"../assets/images/icon-close.svg\")';\r\n    }\r\n});\r\n\r\n// Start Cart Logic\r\nconst cartProductWrapper = document.querySelector('.cart_product_wrapper');\r\nconst cartProductContainer = document.querySelector('.cart_product_container');\r\nconst addCartButton = document.querySelector('.add_cart_button');\r\nconst removeCartItemIcons = document.querySelectorAll('.delete-icon');\r\nconst productType = document.querySelector('product_type');\r\nconst productPrice = document.querySelector('.price');\r\n\r\nconst cartProductWrapperHeight = cartProductWrapper.offsetHeight;\r\ncartDetailsBox.style.display = 'none';\r\n\r\nconst isCartEmpty = () => {\r\n    if (cartProductContainer.children.length === 0) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\nconst createCartItem = () => {\r\n    if (+productAmountValue.innerHTML === 0) {\r\n        return false;\r\n    }\r\n    const cartProduct = document.createElement('div'),\r\n        cartProductImage = document.createElement('img'),\r\n        cartInfo = document.createElement('div'),\r\n        cartDeleteIcon = document.createElement('div'),\r\n        cartDeleteIconImg = document.createElement('img'),\r\n        cartInfoProductType = document.createElement('span'),\r\n        cartProductPriceInfo = document.createElement('p'),\r\n        cartProductPrice = document.createElement('span'),\r\n        cartProductAmount = document.createElement('span'),\r\n        cartTotalPrice = document.createElement('span');\r\n\r\n    const activeImageThumbnail = document.querySelector(\r\n            '.product .images-thumbnails img.active'\r\n        ),\r\n        productType = document.querySelector('.product_type');\r\n\r\n    cartProduct.classList.add(\r\n        'cart_product',\r\n        'd-flex',\r\n        'justify-content-between',\r\n        'align-items-center',\r\n        'mb-3'\r\n    );\r\n    cartProductImage.classList.add('me-3', 'rounded-3');\r\n    cartInfo.classList.add('cart_info', 'flex-wrap', 'd-flex');\r\n    cartDeleteIcon.classList.add('delete-icon');\r\n\r\n    cartInfoProductType.classList.add('cart_product_type', 'w-100');\r\n    cartProductPriceInfo.classList.add('cart_product_price_info', 'me-2');\r\n    cartProductPrice.classList.add('cart_product_price');\r\n    cartProductAmount.classList.add('cart_product_amount');\r\n    cartTotalPrice.classList.add('cart_total_price', 'fw-bold');\r\n\r\n    cartProductImage.src = activeImageThumbnail.src;\r\n    cartProductImage.alt = activeImageThumbnail.alt;\r\n    cartDeleteIconImg.src = './assets/images/icon-delete.svg';\r\n    cartDeleteIconImg.alt = 'icon delete';\r\n\r\n    cartInfoProductType.innerText = productType.innerText;\r\n    cartProductPrice.innerHTML = `${productPrice.innerHTML} `;\r\n    cartProductAmount.innerHTML = `x ${productAmountValue.innerHTML} `;\r\n    cartTotalPrice.innerHTML = `&#36;${(\r\n        parseInt(productPrice.innerText.slice(1)) *\r\n        parseInt(cartProductAmount.innerText.slice(1))\r\n    ).toFixed(2)}`;\r\n\r\n    console.log(isCartEmpty());\r\n\r\n    cartProductPriceInfo.append(cartProductPrice, cartProductAmount);\r\n    cartInfo.append(cartInfoProductType, cartProductPriceInfo, cartTotalPrice);\r\n    cartDeleteIcon.append(cartDeleteIconImg);\r\n    cartProduct.append(cartProductImage, cartInfo, cartDeleteIcon);\r\n\r\n    cartProductContainer.appendChild(cartProduct);\r\n};\r\nconst addCheckoutButtonOrMessage = () => {\r\n    if (isCartEmpty()) {\r\n        const messageForEmptyCart = document.createElement('p'),\r\n            checkoutButton = document.querySelector('.checkout-btn');\r\n\r\n        messageForEmptyCart.innerText = 'Your Cart is Empty';\r\n        messageForEmptyCart.classList.add('message-empty');\r\n\r\n        cartProductWrapper.style.height = '178px';\r\n        cartProductWrapper.appendChild(messageForEmptyCart);\r\n        // Make Sure Element Exist So There is no Error\r\n        if (checkoutButton !== null) {\r\n            checkoutButton.remove();\r\n        }\r\n    } else {\r\n        const messageEmpty = document.querySelector('.message-empty');\r\n        const checkoutButton = document.querySelector('.checkout-btn');\r\n        if (messageEmpty) messageEmpty.remove();\r\n\r\n        // Make Sure to Make no Duplicate Checkout Button\r\n        if (checkoutButton === null) {\r\n            const newCartCheckoutButton = document.createElement('button');\r\n            newCartCheckoutButton.classList.add(\r\n                'checkout-btn',\r\n                'btn',\r\n                'd-flex',\r\n                'gap-2',\r\n                'justify-content-center',\r\n                'align-items-center',\r\n                'py-3',\r\n                'rounded-3',\r\n                'w-100',\r\n                'text-white',\r\n                'fw-bold'\r\n            );\r\n            newCartCheckoutButton.innerText = 'Checkout';\r\n            cartProductWrapper.style.removeProperty('height');\r\n            cartProductWrapper.appendChild(newCartCheckoutButton);\r\n        }\r\n    }\r\n};\r\n\r\n// To Initalize the Message if There is no Cart Items\r\naddCheckoutButtonOrMessage();\r\n\r\naddCartButton.addEventListener('click', () => {\r\n    createCartItem();\r\n    addCheckoutButtonOrMessage();\r\n    updateCartItemsCount();\r\n    productAmountValue.innerText = '0';\r\n});\r\ncartDetailsBox.addEventListener('click', (event) => {\r\n    // Remove Cart Item\r\n    if (\r\n        event.target.tagName.toLowerCase() === 'img' &&\r\n        event.target.parentElement.classList.contains('delete-icon')\r\n    ) {\r\n        event.target.parentElement.parentElement.remove();\r\n        addCheckoutButtonOrMessage();\r\n        updateCartItemsCount();\r\n    }\r\n    // To Stop The Cart Box From Hide\r\n    event.stopPropagation();\r\n});\r\n","// Initialize Lightbox Thumbnails Background For Active Element\r\ndocument.querySelector('.lightbox [data-active=true]').style.backgroundColor =\r\n    '#fff';\r\n// Product Images + Lightbox Images\r\nconst productImages = Array.from(\r\n        document.querySelectorAll('.product .image-container img')\r\n    ),\r\n    lightboxImages = Array.from(\r\n        document.querySelectorAll('.lightbox .image-container img')\r\n    ),\r\n    productImageContainers = Array.from(\r\n        document.querySelectorAll('.product .image-container')\r\n    ),\r\n    lightboxImageContainers = Array.from(\r\n        document.querySelectorAll('.lightbox .image-container')\r\n    ),\r\n    IMAGES_PATH = [\r\n        '../assets/images/image-product-1.jpg',\r\n        '../assets/images/image-product-2.jpg',\r\n        '../assets/images/image-product-3.jpg',\r\n        '../assets/images/image-product-4.jpg',\r\n    ];\r\n\r\nlet productImagePreview = document.querySelector('.product .image-preview img'),\r\n    lightboxImagePreview = document.querySelector(\r\n        '.lightbox .image-preview img'\r\n    );\r\n\r\nconst removeActive = (elements, type = 'element_class') => {\r\n    if (type === 'element_class') {\r\n        elements.forEach((element) => element.classList.remove('active'));\r\n    } else if (type === 'data_active') {\r\n        elements.forEach((element) =>\r\n            element.setAttribute('data-active', false)\r\n        );\r\n    }\r\n};\r\n\r\n// START Big Image Preview Change Logic\r\nproductImages.forEach((img, index) => {\r\n    img.addEventListener('click', (event) => {\r\n        if (!event.currentTarget.classList.contains('active')) {\r\n            removeActive(productImages);\r\n            removeActive(productImageContainers, 'data_active');\r\n            // console.log()\r\n\r\n            productImagePreview.src = IMAGES_PATH[index];\r\n            event.currentTarget.classList.add('active');\r\n            event.currentTarget.parentElement.setAttribute('data-active', true);\r\n            event.currentTarget.parentElement.style.backgroundColor = '#fff';\r\n        } else {\r\n            event.currentTarget.parentElement.style.removeProperty(\r\n                'background-color'\r\n            );\r\n        }\r\n    });\r\n});\r\nlightboxImages.forEach((img, index) => {\r\n    img.addEventListener('click', (event) => {\r\n        if (!event.currentTarget.classList.contains('active')) {\r\n            removeActive(lightboxImages);\r\n            removeActive(lightboxImageContainers, 'data_active');\r\n            // console.log()\r\n\r\n            lightboxImagePreview.src = IMAGES_PATH[index];\r\n            event.currentTarget.classList.add('active');\r\n            event.currentTarget.parentElement.setAttribute('data-active', true);\r\n            event.currentTarget.parentElement.style.backgroundColor = '#fff';\r\n        } else {\r\n            event.currentTarget.parentElement.style.removeProperty(\r\n                'background-color'\r\n            );\r\n        }\r\n    });\r\n});\r\n// Lightbox Previous/Next Logic\r\nconst productNextIcon = document.querySelector('.product .icon-next'),\r\n    productPrevIcon = document.querySelector('.product .icon-previous'),\r\n    lightboxNextIcon = document.querySelector('.lightbox .icon-next'),\r\n    lightboxPrevIcon = document.querySelector('.lightbox .icon-previous');\r\n\r\n// imageContainers Needed for Data Index\r\nconst nextImage = (type) => {\r\n    // 2 Types => product | lightbox for reusability purpose\r\n    const activeImage = document.querySelector(`.${type} .active`);\r\n    let activeIndex = activeImage.parentElement.dataset.index;\r\n\r\n    if (type === 'product') {\r\n        if (activeIndex < productImageContainers.length - 1) {\r\n            activeIndex++;\r\n            productImages[activeIndex].click();\r\n        }\r\n    } else if (type === 'lightbox') {\r\n        if (activeIndex < productImageContainers.length - 1) {\r\n            activeIndex++;\r\n            lightboxImages[activeIndex].click();\r\n        }\r\n    }\r\n};\r\nconst prevImage = (type) => {\r\n    // 2 Types => product | lightbox for reusability purpose\r\n    const activeImage = document.querySelector(`.${type} .active`);\r\n    let activeIndex = activeImage.parentElement.dataset.index;\r\n    if (type === 'product') {\r\n        if (activeIndex > 0) {\r\n            activeIndex--;\r\n            productImages[activeIndex].click();\r\n        }\r\n    } else if (type === 'lightbox') {\r\n        if (activeIndex > 0) {\r\n            activeIndex--;\r\n            lightboxImages[activeIndex].click();\r\n        }\r\n    }\r\n};\r\nconst hideLightboxOverlay = () => {\r\n    lightbox.classList.remove('active');\r\n    overlay.classList.remove('active');\r\n};\r\nconst showLightboxOverlay = () => {\r\n    lightbox.classList.add('active');\r\n    overlay.classList.add('active');\r\n};\r\n\r\nproductNextIcon.addEventListener('click', () => nextImage('product'));\r\nproductPrevIcon.addEventListener('click', () => prevImage('product'));\r\nlightboxNextIcon.addEventListener('click', () => nextImage('lightbox'));\r\nlightboxPrevIcon.addEventListener('click', () => prevImage('lightbox'));\r\n// END Big Image Preview Change Logic\r\n\r\nconst lightbox = document.querySelector('.lightbox');\r\n\r\n// Make Sure No Click Allowed on Navbar Toggler when Lightbox is shown\r\nproductImagePreview.addEventListener('click', () => showLightboxOverlay());\r\n\r\n// Close Lightbox with Close Icon\r\nconst closeIcon = document.querySelector('.icon-close');\r\ncloseIcon.addEventListener('click', () => hideLightboxOverlay());\r\n\r\n// Make Sure overlay goes when Resize Below\r\nwindow.addEventListener('resize', () => {\r\n    if (window.innerWidth <= 768) hideLightboxOverlay();\r\n});\r\n// Hide Overlay, Navbar Menu And Lightbox When Clicking on Overlay\r\nwindow.addEventListener('click', (event) => {\r\n    if (event.target.classList.contains('overlay')) {\r\n        menu.classList.remove('active');\r\n        hideLightboxOverlay();\r\n        // Convert Menu Close Icon to Menu Icon\r\n        navbarTogglerIcon.style.removeProperty('background-image');\r\n    }\r\n});\r\n"]}